@misc{standardised_lsp_extensions,
    author = "Rask, et al",
    title = "The Specification Language Server Protocol: A Proposal for Standardised LSP Extensions",
    url = "https://arxiv.org/abs/2108.02961",
    year = 2021
}

@misc{merlin_experience_report,
    author = "Bour et al",
    title = "Merlin: A Language Server for OCaml (Experience Report)",
    url = "https://dl.acm.org/doi/pdf/10.1145/3236798",
    year = 2018
}

@misc{vsc_langserver_docs,
    url = "https://code.visualstudio.com/api/language-extensions/language-server-extension-guide",
    year = 2022
}

@misc{vsc_langserver_features,
    url = "https://code.visualstudio.com/api/language-extensions/programmatic-language-features",
    year = 2022
}

@article{classless_java,
    author = "Wang, Yanlin and Zhang, Haoyuan and Oliveira, Bruno C. d. S. and Servetto, Marco",
    title = {Classless Java},
    year = {2016},
    issue_date = {March 2017},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {52},
    number = {3},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/3093335.2993238},
    doi = {10.1145/3093335.2993238},
    abstract = { This paper presents an OO style without classes, which we call interface-based object-oriented programming (IB). IB is a natural extension of closely related ideas such as traits. Abstract state operations provide a new way to deal with state, which allows for flexibility not available in class-based languages. In IB state can be type-refined in subtypes. The combination of a purely IB style and type-refinement enables powerful idioms using multiple inheritance and state. To introduce IB to programmers we created Classless Java: an embedding of IB directly into Java. Classless Java uses annotation processing for code generation and relies on new features of Java 8 for interfaces. The code generation techniques used in Classless Java have interesting properties, including guarantees that the generated code is type-safe and good integration with IDEs. Usefulness of IB and Classless Java is shown with examples and case studies. },
    journal = {SIGPLAN Not.},
    month = {oct},
    numpages = {11},
    keywords = {Interface-based programming, multiple inheritance, code generation}
}