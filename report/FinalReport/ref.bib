@misc{standardised_lsp_extensions,
    author = "Rask, et al",
    title = "The Specification Language Server Protocol: A Proposal for Standardised LSP Extensions",
    url = "https://arxiv.org/abs/2108.02961",
    year = 2021
}

@misc{merlin_experience_report,
    author = "Bour et al",
    title = "Merlin: A Language Server for OCaml (Experience Report)",
    url = "https://dl.acm.org/doi/pdf/10.1145/3236798",
    year = 2018
}

@misc{vsc_langserver_docs,
    title = {Language Server Extension Guide},
    url = "https://code.visualstudio.com/api/language-extensions/language-server-extension-guide",
    year = 2022
}

@misc{vsc_langserver_features,
    title = {Programmatic Language Features},
    url = "https://code.visualstudio.com/api/language-extensions/programmatic-language-features",
    year = 2022
}

@misc{blacklist_vscode_tutorial,
    author = "Jeremy Greer",
    title = {Language Server Protocol Tutorial: From VSCode to Vim},
    url = "https://www.toptal.com/javascript/language-server-protocol-tutorial",
    year = 2022
}

@article{classless_java,
    author = "Wang, Yanlin and Zhang, Haoyuan and Oliveira, Bruno C. d. S. and Servetto, Marco",
    title = {Classless Java},
    year = {2016},
    issue_date = {March 2017},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {52},
    number = {3},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/3093335.2993238},
    doi = {10.1145/3093335.2993238},
    abstract = { This paper presents an OO style without classes, which we call interface-based object-oriented programming (IB). IB is a natural extension of closely related ideas such as traits. Abstract state operations provide a new way to deal with state, which allows for flexibility not available in class-based languages. In IB state can be type-refined in subtypes. The combination of a purely IB style and type-refinement enables powerful idioms using multiple inheritance and state. To introduce IB to programmers we created Classless Java: an embedding of IB directly into Java. Classless Java uses annotation processing for code generation and relies on new features of Java 8 for interfaces. The code generation techniques used in Classless Java have interesting properties, including guarantees that the generated code is type-safe and good integration with IDEs. Usefulness of IB and Classless Java is shown with examples and case studies. },
    journal = {SIGPLAN Not.},
    month = {oct},
    numpages = {11},
    keywords = {Interface-based programming, multiple inheritance, code generation}
}

@misc{logical_english,
  author       = {Robert Kowalski},
  url = {https://www.doc.ic.ac.uk/~rak/papers/LPOP.pdf},
  title        = {Logical English},
  year         = {2020}
}

@misc{swish_editor,
    title = {Logical English on the SWISH online editor},
    year = {2022},
    url = {https://logicalenglish.logicalcontracts.com/}
}

@misc{codemirror_migration,
    title = {Codemirror: Migration guide from Codemirror 5 to Codemirror 6},
    url = {https://codemirror.net/docs/migration/}
}

@misc{codemirror_6_language_server,
    url = {https://hjr265.me/blog/codemirror-lsp/},
    title = {Using Language Servers with CodeMirror 6},
    author = {Mahmud Ridwan}
}

@misc{monaco_language_server,
    url = {https://github.com/TypeFox/monaco-languageclient},
    title = {Monaco Language Client and VSCode WebSocket Json RPC},
    author = {TypeFox}
}

@misc{visual_studio_language_server,
    url = {https://docs.microsoft.com/en-us/visualstudio/extensibility/adding-an-lsp-extension?view=vs-2022},
    title = {Add a Language Server Protocol extension}
}

@misc{intellij_language_server,
    url = {https://github.com/ballerina-platform/lsp4intellij},
    title = {LSP4IntelliJ - Language Server Protocol Support for the Jetbrains Plugins}
}

@misc{ide_rankings,
    url = {https://insights.stackoverflow.com/survey/2021/most-popular-technologies-new-collab-tools},
    title = {2021 Developer Survey},
    author = {Stack Overflow},
    year = {2021}
}

@misc{textmate_grammars_spec,
    url = {https://macromates.com/manual/en/language_grammars},
    title = {TextMate Grammars Specification},
    author = {macromates.com},
    year = {2021}
}

@misc{yq_repo,
    title = {yq},
    author = {mikefarah},
    publisher = {GitHub},
    journal = {GitHub Repository},
    url = {https://github.com/mikefarah/yq},
    commit = {86c2b03630163947edb5471c13967e58c3a3b6ab}
}