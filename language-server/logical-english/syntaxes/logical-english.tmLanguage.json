{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Logical English",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#multiline-comments"
    },
    {
      "include": "#template-headers"
    },
    {
      "include": "#knowledge-base-headers"
    },
    {
      "include": "#scenario-headers"
    },
    {
      "include": "#query-headers"
    },
    {
      "include": "#template-variables"
    },
    {
      "include": "#predefined-constants"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.logical-english",
          "match": "\\b(if|then|it is the case that|it is not the case that)\\b"
        }
      ]
    },
    "comments": {
      "match": "(%)(.*)",
      "name": "comment.line.percentage.logical-english",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.logical-english"
        }
      }
    },
    "multiline-comments": {
      "name": "comment.block.logical-english",
      "begin": "/\\*",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.block.begin.logical-english"
        }
      },
      "end": "\\*/",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.comment.block.end.logical-english"
        }
      }
    },
    "template-headers": {
      "match": "^(\\s*)(the templates are)(:)(\\s*)$",
      "captures": {
        "2": {
          "name": "storage.type.template.logical-english"
        },
        "3": {
          "name": "punctuation.section.template.begin.logical-english"
        }
      }
    },
    "knowledge-base-headers": {
      "match": "^(\\s*)(the knowledge base \\w[\\w|\\s]+)(:)(\\s*)$",
      "captures": {
        "2": {
          "name": "storage.type.knowledge-base.logical-english"
        },
        "4": {
          "name": "punctuation.section.knowledge-base.begin.logical-english"
        }
      }
    },
    "scenario-headers": {
      "match": "^(\\s*)(scenario) (\\w[\\w|\\s]*) (is:)(\\s*)$",
      "name": "storage.type.scenario.logical-english",
      "captures": {
        "3": {
          "name": "entity.name.type.scenario.logical-english"
        },
        "4": {
          "name": "punctuation.section.scenario.begin.logical-english"
        }
      }
    },
    "query-headers": {
      "match": "^(\\s*)(query) (\\w[\\w|\\s]*) (is:)(\\s*)$",
      "name": "storage.type.query.logical-english",
      "captures": {
        "3": {
          "name": "entity.name.type.query.logical-english"
        },
        "4": {
          "name": "punctuation.section.query.begin.logical-english"
        }
      }
    },
    "template-variables": {
      "match": "(\\*)(\\w[\\w|\\s]*)(\\*)",
      "name": "meta.variable.template.logical-english",
      "captures": {
        "1": {
          "name": "punctuation.definition.variable.begin.logical-english"
        },
        "2": {
          "name": "variable.template.logical-english"
        },
        "3": {
          "name": "punctuation.definition.variable.end.logical-english"
        }
      }
    },
    "predefined-constants": {
      "match": "\\b(unknown|hi)\\b",
      "name": "variable.special.predefined.logical-english"
    }
  },
  "scopeName": "source.logical-english"
}
